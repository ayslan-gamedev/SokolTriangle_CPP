

#define SOKOL_IMPL
#define SOKOL_GLCORE

#include "sokol_gfx.h"
#include "sokol_log.h"
#include <GLFW/glfw3.h>
#include <iostream>

int init() {
  sg_desc sg = {0};
  sg_setup(sg);
  return 0;
}

int main() {
  std::cout << "Initializing window..." << std::endl;

  if (!glfwInit()) {
    std::cout << "Failed to initialize GLFW" << std::endl;
    return -1;
  }

  glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);
  glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);
  glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);

  GLFWwindow *win = glfwCreateWindow(800, 600, "test screen", NULL, NULL);

  if (win == NULL) {
    std::cout << "Failed to create GLFW window" << std::endl;
    glfwTerminate();
    return -1;
  }

  glfwMakeContextCurrent(win);
  std::cout << "GLFW windows initialized successful" << std::endl;

  // Loop principal (adicionado para manter a janela aberta)
  while (!glfwWindowShouldClose(win)) {
    // Renderizar aqui...

    // Trocar os buffers e processar eventos
    glfwSwapBuffers(win);
    glfwPollEvents();
  }

  // Encerrar o GLFW
  glfwTerminate();
  return 0;
}
